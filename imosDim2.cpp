#include <iostream>
#include <numeric>

using namespace std;

int main(void){

    // 2次元imos 
    // 指定された範囲に加算命令を数回行う。
    // その時の行列を求める。
    
    const int H = 3;
    const int W = 4;

    /* 一般的な解法
                             +1               +3               -2
     初期状態           [1,1] ~ [2,2]     [2,2] ~ [3,3]    [1,2] ~ [3,4]   
     | 0| 0| 0| 0|     | 1| 1| 0| 0|     | 1| 1| 0| 0|    | 1|-1|-2|-2|
     | 0| 0| 0| 0| =>  | 1| 1| 0| 0| =>  | 1| 4| 3| 0| => | 1| 2| 1|-2|
     | 0| 0| 0| 0|     | 0| 0| 0| 0|     | 0| 3| 3| 0|    | 0| 1| 1|-2|
    */
    
    /* 2次元imos
     基本は1次元の時と同じ。
     ただし、斜め下は加算し縦を減算する。outOfBoundsの場合は無視。
     例)  +1
        | 0| 0| =>         |+1| 0|-1|
        | 0| 0|            | 0| 0|
                            -1|   +1|

                             +1               +3               -2
     初期状態           [1,1] ~ [2,2]     [2,2] ~ [3,3]    [1,2] ~ [3,4]   
     | 0| 0| 0| 0|     | 1| 0|-1| 0|     | 1| 0|-1| 0|    | 1|-2|-1| 0|
     | 0| 0| 0| 0| =>  | 0| 0| 0| 0| =>  | 0| 3| 0|-3| => | 0| 3| 0|-3|
     | 0| 0| 0| 0|     |-1| 0| 1| 0|     |-1| 0|-1| 0|    |-1| 0|-1| 0|
    */
    int a[H+1][W+1];
    fill(a[0],a[H+1],0);
    // +1             +3                -2
    a[1][1] += 1;   a[2][2] += 3;     a[1][2] += -2;
    a[1][3] -= 1;   a[2][4] -= 3;   //a[1][5] += -2;
    a[3][1] -= 1; //a[4][2] += 3;     a[4][2] += -2;
    a[3][3] += 1; //a[4][4] += 3;     a[4][5] += -2;

    // for(int i = 1; i <= H;i++){
    //     for(int k = 1; k <= W;k++){
    //         printf("%2d ",a[i][k]);
    //     }
    //     cout << endl;
    // }

    /*
      横の累積和を求める
       | 1|-1|-2|-2|
       | 0| 3| 3| 0|
       |-1|-1| 0| 0|
    */
    // partial_sum(x,y,a[])の範囲がx <= index < y であることに注意
    for(int i = 1; i <= H;i++){
        partial_sum(&a[i][0],&a[i][W+1],&a[i][0]);
    }
    cout << "partial_sum of row" << endl;
    for(int i = 1; i <= H;i++){
        for(int k = 1; k <= W;k++){
            printf("%2d ",a[i][k]);
        }
        cout << endl;
    }
    
    /*
      縦の累積和を求める
       | 1|-1|-2|-2|
       | 1| 2| 1|-2|
       | 0| 1| 1|-2|
    */
    cout << "partial_sum of column" << endl;
    for(int i = 1; i <= H;i++){
        for(int k = 1; k <= W;k++){
            a[i][k] += a[i-1][k];
        }
    }
    for(int i = 1; i <= H;i++){
        for(int k = 1; k <= W;k++){
            printf("%2d ",a[i][k]);
        }
        cout << endl;
    }
    return 0;
}
